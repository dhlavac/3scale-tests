name: test_smoke_user_key_query_20-40M
# http endpoints will be added via test
phases:
  - rampUp:
      increasingRate:
        initialUsersPerSec: 2
        targetUsersPerSec: 20
        duration: 60s
        maxSessions: 400
        scenario: &postLargeData
          - get:
            - randomCsvRow:
                file: 'auth_user_key.csv'
                skipComments: true
                removeQuotes: true
                columns:
                  0: 0 # hostname
                  1: 1 # auth_user_key
                  2: 2 # user_key
            - randomInt: randomBackend <- 0 .. 9
            - randomInt: randomPath <- 0 .. 9
            - template:
                pattern: ${1}=${2}
                toVar: param
            - template:
                pattern: /${randomBackend}/anything/${randomPath}?${param}
                toVar: path
            - httpRequest:
                authority:
                  fromVar: 0
                POST:
                  fromVar: path
                sync: true
                body:
                  fromFile: message_1kb.txt
  - steadyLoad20M  : #20M call per day  is equivalent of 232 req/s
      constantRate:
        duration: 30m
        usersPerSec: 116
        maxSessions: 400
        startAfter:
          phase: rampUp
        scenario: *postLargeData
  - steadyLoadGet20M:
      constantRate:
        duration: 30m
        usersPerSec: 116
        maxSessions: 400
        startAfter:
          phase: rampUp
        scenario:
          - getData:
              - randomCsvRow:
                  file: 'auth_user_key.csv'
                  skipComments: true
                  removeQuotes: true
                  columns:
                    0: 0 # hostname
                    1: 1 # auth_user_key
                    2: 2 # user_key
              - randomInt: randomBackend <- 0 .. 9
              - randomInt: randomPath <- 0 .. 9
              - template:
                  pattern: ${1}=${2}
                  toVar: param
              - template:
                  pattern: /${randomBackend}/anything/${randomPath}?${param}
                  toVar: path
              - httpRequest:
                  authority:
                    fromVar: 0
                  GET:
                    fromVar: path
                  sync: true
  - steadyLoad30M: #30M call per day  is equivalent of 348 req/s
      constantRate:
        duration: 30m
        usersPerSec: 174
        maxSessions: 400
        startAfter:
          phase: steadyLoad20M
        scenario: *postLargeData
  - steadyLoadGet30M:
      constantRate:
        duration: 30m
        usersPerSec: 174
        maxSessions: 400
        startAfter:
          phase: steadyLoadGet20M
        scenario:
          - getData:
              - randomCsvRow:
                  file: 'auth_user_key.csv'
                  skipComments: true
                  removeQuotes: true
                  columns:
                    0: 0 # hostname
                    1: 1 # auth_user_key
                    2: 2 # user_key
              - randomInt: randomBackend <- 0 .. 9
              - randomInt: randomPath <- 0 .. 9
              - template:
                  pattern: ${1}=${2}
                  toVar: param
              - template:
                  pattern: /${randomBackend}/anything/${randomPath}?${param}
                  toVar: path
              - httpRequest:
                  authority:
                    fromVar: 0
                  GET:
                    fromVar: path
                  sync: true
  - steadyLoad40M: #40M call per day  is equivalent of 463 req/s
      constantRate:
        duration: 60m
        usersPerSec: 232
        maxSessions: 400
        startAfter:
          phase: steadyLoad30M
        scenario: *postLargeData
  - steadyLoadGet40M:
      constantRate:
        duration: 60m
        usersPerSec: 232
        maxSessions: 400
        startAfter:
          phase: steadyLoadGet30M
        scenario:
          - getData:
              - randomCsvRow:
                  file: 'auth_user_key.csv'
                  skipComments: true
                  removeQuotes: true
                  columns:
                    0: 0 # hostname
                    1: 1 # auth_user_key
                    2: 2 # user_key
              - randomInt: randomBackend <- 0 .. 9
              - randomInt: randomPath <- 0 .. 9
              - template:
                  pattern: ${1}=${2}
                  toVar: param
              - template:
                  pattern: /${randomBackend}/anything/${randomPath}?${param}
                  toVar: path
              - httpRequest:
                  authority:
                    fromVar: 0
                  GET:
                    fromVar: path
                  sync: true